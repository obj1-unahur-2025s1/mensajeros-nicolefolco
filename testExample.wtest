import mensajerosDePelicula.*
import empresa.*

describe "grupo de testeo mensajeros" {

  test "roberto (90kg) puede llevar un paquete que está pago en un camión que tiene un acoplado." {
    roberto.asignarVehiculo(camion)
    assert.equals(true, paquete.puedeSerEntregado(roberto, puenteDeBrooklyn))
  }
  
  test "neo con crédito no puede llevar un paquete que no está pago a la matrix."{
    assert.equals(false, paquete.puedeSerEntregado(neo, matrix))
  }

  test "la empresa puede hacer una entrega rapida al puente de brooklyn"{
    empresa.contratarMensajero(roberto)
     assert.equals(true, empresa.entregaRapida(puenteDeBrooklyn)))
      }
  
  test "la empresa no puede entregar un paquetón"{
    paquetonViajero.solicitarDestino(puenteDeBrooklyn)
    paquetonViajero.solicitarDestino(matrix)
    paquetonViajero.abonarPaquetes(100)
    paquetonViajero.abonarPaquetes(100)
    empresa.entregarPaquete(paquetonViajero)
    assert.equals(false, empresa.puedeEntregarCualquiera(paquetonViajero))
  }
  
  test "facturacion de varios paquetes"{
    empresa.contratarMensajero(neo)
    empresa.contratarMensajero(roberto)
    empresa.contratarMensajero(chukNorris)
    paquete.abonar(50)
    empresa.entregarPaquete(paquete)
    empresa.entregarPaquete(paquetito)
    empresa.entregarPaquete(paquetonViajero)
    assert.equals(50, empresa.facturacion())
  }

  test "la facturacion de un paqueton" {
    empresa.contratarMensajero(neo)
    empresa.contratarMensajero(roberto)
    empresa.contratarMensajero(chukNorris)
    paquetonViajero.solicitarDestino(puenteDeBrooklyn)
    paquetonViajero.solicitarDestino(matrix)
    paquetonViajero.abonarPaquetes(100)
    paquetonViajero.abonarPaquetes(100)
    empresa.entregarPaquete(paquetonViajero)
    assert.equals(200, empresa.facturacion())
  }

}